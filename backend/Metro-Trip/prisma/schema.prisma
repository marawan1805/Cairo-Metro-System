datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String            @id
  email          String            @unique
  phoneNumber    String            @unique
  name           String
  password       String
  role           UserRole
  subscription   SubscriptionType?
  isSenior       Boolean
  seniorRequest  SeniorRequest?
  refundRequests RefundRequest[]
  rides          Trip[]
}

enum SubscriptionType {
  Monthly
  Quarterly
  Annual
}

enum UserRole {
  User
  Senior
  Admin
}

model Schedule {
  id        Int      @id @default(autoincrement())
  routeId   RouteId
  startTime DateTime
  endTime   DateTime
}

model Trip {
  id               String          @id @default(uuid())
  userId           String
  user             User            @relation(fields: [userId], references: [id])
  startLocation    String
  purchasedAt      DateTime
  status           RideStatus
  totalPrice       Int
  route            RouteId
  RefundRequest    RefundRequest[]
  transferStations String[]
}

enum RouteId {
  one
  two
  three
}

enum RideStatus {
  completed
  cancelled
  ongoing
}

model SeniorRequest {
  id         Int                 @id @default(autoincrement())
  userId     String              @unique
  user       User                @relation(fields: [userId], references: [id])
  idImage    String
  status     SeniorRequestStatus
  reviewedBy Int?
  createdAt  DateTime            @default(now())
}

enum SeniorRequestStatus {
  Pending
  Approved
  Rejected
}

model RefundRequest {
  id          String              @id @default(uuid())
  description String
  createdAt   DateTime
  status      RefundRequestStatus
  reviewedBy  Int?
  tripId      String
  trip        Trip                @relation(fields: [tripId], references: [id])
  User        User?               @relation(fields: [userId], references: [id])
  userId      String?
}

enum RefundRequestStatus {
  Pending
  Approved
  Rejected
}
